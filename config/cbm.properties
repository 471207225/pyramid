# path to input train data
input.trainData=/scratch/wang.bin/trec.data/scene/data_sets/train

# path to input test data
input.testData=/scratch/wang.bin/trec.data/scene/data_sets/test

# matrix format; can be dense, sparse_random or sparse_sequential
# use sparse format for text data with large number of sparse features to save memory
# sparse_sequential should be avoided when boosting is used; use sparse_random for boosting
input.matrixType=dense

# folder for the program output
output=/scratch/li.che/projects/pyramid/archives/exp211/scene/101

# number of clusters in the CBM
mixture.numClusters=20

# type of the multi-class classifier in CBM; supported type: lr (for Logistic Regression) or boost (for Gradient Boosting)
mixture.multiClassClassifierType=lr

# type of the binary classifier in CBM; supported type: lr or boost
mixture.binaryClassifierType=lr

# whether to start training CBM from an existing model, if such model exists in the output folder
# true, or false, or auto
# false = alway start from scratch
# true = first load back an existing model, and then continue training
# auto = detect whether there is an existing model in the output folder, if yes, load it back and keep training; if not, start from scratch
train.warmStart=false

# whether to initialize CBM with BM; if true, 10 BM models with be trained and the best one will be kept as the initialization of CBM
train.initialize=true

# whether to allow empty subset to be predicted; 
# true = allow empty prediction
# false = do not allow empty prediction
# auto = allow empty prediction only if the training set contains empty label sets
predict.allowEmpty=auto

########## EM ###########
em.numIterations=10

####### logistic regression #####
# Gaussian prior variance for LR weights. Small values indicate strong regularizations
lr.multiClassVariance=1.0
lr.binaryVariance=1.0

############# boosting #########
# how many boosting iterations to run (i.e., number of trees to add) in each M step of the EM loop
boost.numIterationsBinary=20
boost.numIterationsMultiClass=20
# number of leaves in the regression tree
boost.numLeavesBinary=5
boost.numLeavesMultiClass=5
# shrinkage of boosting
boost.shrinkageBinary=0.1
boost.shrinkageMultiClass=0.1


